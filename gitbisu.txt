## GIT COMMANDS ##

1 - CLONAR: Clonar projeto
    git clone <remote address>

2- RESET: Resetar projeto ao original do repositório.
   git reset --hard origin/main

3- TRAZER arquivos do projeto:
    git pull

4- LISTAR alterações:
    git status

5- LISTAR commits
    git log

6- ADICIONAR novos arquivos ao projeto
    git add .

7- REGISTRAR commit
    git commit -m “<descrição da feature/alterações>”

8- LISTAR branchs (a branch atual estará em destaque na lista)
    git branch

9- CRIAR branch
   git branch <nome da nova branch>

10- MUDAR de branch:
    git checkout <nome da branch destino

11-SUBIR no repositório remoto (site do GitHub) uma branch criada localmente
    git push --set-upstream origin <nome_da_branch>

### SEMPRE ANTES DE TROCAR DE BRANCHes, COMMITAR E SUBIR ALTERAÇÕES ###

### NOSSO PROJETO DE TESTES PARA ESTUDO DO GITHUB ###
-> Criar um novo repositório no GitHub
-> Clonar o repositório para o computador local


### HIPÓTESE: atualizar localmente um projeto, trazendo todas as alterações feitas no repositório remoto ###
LEMBRANDO QUE:
1- localmente estou trabalhando numa branch auxiliar (davis)
2- As alterações remotas deverão prevalecer
3- As alterações locais deverão ser descartadas
===========================================================================================================

1- selecionar branch 'main': git checkout main
2- atualizar localmente a branch main: git pull
3- selecionar a branch auxiliar: git checkout davis
4- merger a branch main na branch auxiliar: git merge main
5- definir a estratégia de merger, ignorado as alterações locais: git merge main -X theirs

